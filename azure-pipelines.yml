jobs:

- job: 'Ubuntu16Py37'
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      Py37NoSolver:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
      Py37Msat:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "msat"
      Py37Z3:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "z3"
      Py37Yices:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "yices"
      Py37CVC4:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "cvc4"
      Py37Btor:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "btor"
      Py37Picosat:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "picosat"
      Py37Bdd:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "bdd"
      Py37MsatWrap:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "msat_wrap"
      Py37Z3Wrap:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "z3_wrap"
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
      architecture: 'x64'
  - bash: ci/install_unix.sh
    displayName: 'Prepare System'
  - bash: ci/run_unix.sh
    displayName: 'Testing'



- job: 'Ubuntu16All'
  condition: or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest'))
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      Py37All:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "all"
      Py37Cython:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
        PYSMT_CYTHON: "TRUE"
      Py37GMPy:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
        PYSMT_GMPY: "TRUE"
      Py37CythonGMPy:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
        PYSMT_CYTHON: "TRUE"
        PYSMT_GMPY: "TRUE"
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
      architecture: 'x64'
  - bash: ci/install_unix.sh
    displayName: 'Prepare System'
  - bash: ci/run_unix.sh
    displayName: 'Testing'


- job: 'Ubuntu16PyPy3'
  condition: or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest'))
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      PyPy3NoSolver:
        pypy_binary: 'pypy3'
        PYTHON_VERSION: 'pypy3'
        PYSMT_SOLVER: "None"
      PyPy3MsatWrap:
        pypy_binary: 'pypy3'
        PYTHON_VERSION: 'pypy3'
        PYSMT_SOLVER: "msat_wrap"
      PyPy3Z3Wrap:
        pypy_binary: 'pypy3'
        PYTHON_VERSION: 'pypy3'
        PYSMT_SOLVER: "z3_wrap"
  steps:
  - bash: |
      echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)/pypy.tmp/pypy/bin:$(PATH)"
  - bash: |
      mkdir pypy.tmp
      cd pypy.tmp
      curl --location --output archive https://downloads.python.org/pypy/pypy3.7-v7.3.2-linux64.tar.bz2
      tar xvf archive
      rm archive
      mv ./* pypy
      cd ..
    displayName: 'Get PyPy'
  - bash: |
      type $(pypy_binary)
      $(pypy_binary) --version
    displayName: 'Check for PyPy'
  - bash: |
      curl --output pypy.tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
      $(pypy_binary) pypy.tmp/get-pip.py
    displayName: 'Get PIP'
  - bash: ci/install_unix.sh
    displayName: 'Prepare System'
  - bash: ci/run_unix.sh
    displayName: 'Testing'



- job: 'OSX10_15'
  condition: or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest'))
  pool:
    vmImage: 'macOS-10.15'
  strategy:
    matrix:
      Py37NoSolver:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
      Py37Msat:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "msat"
      Py37Z3:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "z3"
      Py37Yices:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "yices"
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
      architecture: 'x64'
  - bash: ci/install_unix.sh
    displayName: 'Prepare System'
  - bash: ci/run_unix.sh
    displayName: 'Testing'



- job: 'Win2016'
  condition: or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest'))
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Py37NoSolver:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "None"
      Py37Msat:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "msat"
      Py37Z3:
        PYTHON_VERSION: '3.7'
        PYSMT_SOLVER: "z3"
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
      architecture: 'x64'
  - bash: ci/install_win.sh
    displayName: 'Prepare System'
  - bash: ci/run_win.sh
    displayName: 'Testing'

- job: PyPi
  dependsOn:
    - 'Ubuntu16Py37'
    - 'Ubuntu16All'
    - 'Ubuntu16PyPy3'
    - 'OSX10_15'
    - 'Win2016'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'
  - bash: pip install --upgrade pip
    displayName: 'Upgrade PIP'
  - bash: pip install wheel
    displayName: 'Install Wheel'
  - bash: pip install twine
    displayName: 'Install Twine'
  - script: './make_distrib.sh'
    displayName: 'Make Distrib'
  - task: TwineAuthenticate@0
    inputs:
      externalFeeds: PyPI
  - script: 'python -m twine upload -r PySMT --config-file $(PYPIRC_PATH) dist/*.whl'
    displayName: 'Uploading to PyPI'
